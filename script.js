    var socket = io();
function setup() {
    let weath = "summer"
    let side = 10

    var matrix = []
    let grassValueElement = document.getElementById("grassValue")
    let grassEaterValueElement = document.getElementById("grassEaterValue")
    let predatorValueElement = document.getElementById("predatorValue")
    let wormValueElement = document.getElementById("wormValue")
    let humanValueElement = document.getElementById("humanValue")
    let holeValueElement = document.getElementById("holeValue")
    let weatherElement = document.getElementById("weather")
    let killButtonElement = document.getElementById("killButton")

    socket.on("data", drav)
    socket.on("weather", function (data) {
        weath = data
    })


    function drav(data) {

        matrix = data.matrix
        createCanvas(matrix[0].length * side, matrix.length * side);
        background('#ffffff');
        grassValueElement.innerText = "‘Ω’∏’ø’® (’Ø’°’∂’°’π) ’¢’°’¶’¥’°’∂’∏÷Ç’¥ ’ß ÷á ’∏÷Ç’ø’∏÷Ç’¥ ’ß ’∏÷Ä’§’•÷Ä’´’∂÷â ’Ä’´’¥’° ’Ø’° " + data.grassValue + " ’≠’∏’ø÷â"
        grassEaterValueElement.innerText = "‘Ω’∏’ø’°’Ø’•÷Ä’® (’§’•’≤’´’∂) ’∏÷Ç’ø’∏÷Ç’¥ ’ß ’≠’∏’ø÷â ’á’°’ø ’≠’∏’ø ’∏÷Ç’ø’•’¨’´’Ω ’∂’° ’¢’°’¶’¥’°’∂’∏÷Ç’¥ ’ß, ’´’Ω’Ø ’•÷Ä’Ø’°÷Ä ’™’°’¥’°’∂’°’Ø ’≠’∏’ø ’π’∏÷Ç’ø’•’¨’∏÷Ç ’§’•’∫÷Ñ’∏÷Ç’¥’ù ’¥’°’∞’°’∂’∏÷Ç’¥ ’ß÷â ’Ä’´’¥’° ’Ø’° " + data.grassEaterValue + " ’≠’∏’ø’°’Ø’•÷Ä÷â"
        predatorValueElement.innerText = "‘≥’´’∑’°’ø’´’π’® (’Ø’°÷Ä’¥’´÷Ä) ’∏÷Ç’ø’∏÷Ç’¥ ’ß ’≠’∏’ø’°’Ø’•÷Ä’∂’•÷Ä’´’∂÷â ’á’°’ø ’≠’∏’ø’°’Ø’•÷Ä ’∏÷Ç’ø’•’¨’´’Ω ’∂’° ’¢’°’¶’¥’°’∂’∏÷Ç’¥ ’ß, ’´’Ω’Ø ’•÷Ä’Ø’°÷Ä ’™’°’¥’°’∂’°’Ø ’≠’∏’ø’°’Ø’•÷Ä ’π’∏÷Ç’ø’•’¨’∏÷Ç ’§’•’∫÷Ñ’∏÷Ç’¥’ù ’¥’°’∞’°’∂’∏÷Ç’¥ ’ß÷â ’Ä’´’¥’° ’Ø’° " + data.predatorValue + " ’£’´’∑’°’ø’´’π÷â"
        wormValueElement.innerText = "’à÷Ä’§ (’¥’°÷Ä’¥’∂’°’£’∏÷Ç’µ’∂) ’∏÷Ç’≤’≤’°’Ø’´ ’¢’°’≤’¥’°’∂’∏÷Ç’¥ ’ß ÷á ’∏÷Ä’∏’∑’∂’•÷Ä’´ ’Ø’•÷Ä ’ß ’∞’°’∂’§’´’Ω’°’∂’∏÷Ç’¥÷â ’Ä’´’¥’° ’Ø’° " + data.wormValue + " ’∏÷Ä’§÷â"
        humanValueElement.innerText = "’Ñ’°÷Ä’§ (’°’∂’®’∂’§’∞’°’ø ÷É’∏’≠’∏÷Ç’¥ ’ß ’£’∏÷Ç’µ’∂’®) ’£÷Ä’•’©’• ’∏’π ’¥’•’Ø’´÷Å ’π’´ ’¥’°’∞’°’∂’∏÷Ç’¥ ÷á ’∏’π’∂’π’°÷Å’∂’∏÷Ç’¥ ’ß ’°’¥’•’∂ ’´’∂’π ’´÷Ä ’≥’°’∂’°’∫’°÷Ä’∞’´’∂üòà: ’Ä’´’¥’° ’Ø’° " + data.humanValue + " ’¥’°÷Ä’§÷â"
        holeValueElement.innerText = "’ì’∏’Ω (’Ω÷á) ’∏÷Ç’≤’≤’°’Ø’´ ’£’∏’µ’∏÷Ç’©’µ’∏÷Ç’∂ ’∏÷Ç’∂’´ ÷á ’∂÷Ä’° ’¥’•’ª ’®’∂’Ø’∂’∏÷Ç’¥ ’•’∂ ’Ø’•’∂’§’°’∂’´’∂’•÷Ä ÷á ’¥’°÷Ä’§’´’Ø÷â ’Ä’´’¥’° ’Ø’° " + data.holeValue + " ÷É’∏’Ω÷â"
        if (data.weather == "winter") {
            weatherElement.innerText = "’Å’¥’•’º"
        } else
        if (data.weather == "spring") {
            weatherElement.innerText = "‘≥’°÷Ä’∏÷Ç’∂"
        } else
        if (data.weather == "summer") {
            weatherElement.innerText = "‘±’¥’°’º"
        } else
        if (data.weather == "autumn") {
            weatherElement.innerText = "‘±’∑’∏÷Ç’∂"
        }

        for (var y = 0; y < matrix.length; y++) {
            for (var x = 0; x < matrix[y].length; x++) {

                if (matrix[y][x] == 1) {
                    stroke("black")
                    strokeWeight(2)
                    if (weath == "winter") {
                        fill("#ffe985")
                    }
                    else if (weath == "spring") {
                        fill("#89fc72")
                    }
                    else if (weath == "summer") {
                        fill('#2c9117')
                    }
                    if (weath == "autumn") {
                        fill('#f0d656')
                    }
                    // fill("green")
                    rect(x * side, y * side, side, side);

                }
                else if (matrix[y][x] == 0) {
                    noStroke()
                    fill("#ffffff")
                    rect(x * side, y * side, side, side);

                }
                else if (matrix[y][x] == 2) {
                    stroke("black")
                    strokeWeight(2)
                    fill("#ffff00")
                    rect(x * side, y * side, side, side);

                }
                else if (matrix[y][x] == 3) {
                    stroke("black")
                    strokeWeight(2)
                    fill("red");
                    rect(x * side, y * side, side, side);

                }
                else if (matrix[y][x] == 4) {
                    stroke("black")
                    strokeWeight(2)
                    fill("#ff924f");
                    rect(x * side, y * side, side, side);

                }
                else if (matrix[y][x] == 5) {
                    stroke("#666666")
                    strokeWeight(2)
                    fill("#000000");
                    rect(x * side, y * side, side, side);

                }
                else if (matrix[y][x] == 228) {
                    stroke("black")
                    strokeWeight(2)
                    fill(Math.floor(Math.random() * 255), Math.floor(Math.random() * 255), Math.floor(Math.random() * 255));
                    rect(x * side, y * side, side, side);

                }


            }
        }
    }
}
function kill(){
    let killButtonElement = document.getElementById("killButton")

    socket.emit("kill")
    killButtonElement.innerText = "‘≤’∏’¨’∏÷Ä’∂ ’Ω’∫’°’∂’æ’°’Æ ’•’∂)"
    setInterval(function(){killButtonElement.innerText = "’ç’∫’°’∂’•’¨ ’¢’∏’¨’∏÷Ä’´’∂"},1000);
}
function regen(){
    let regenButtonElement = document.getElementById("regenButton")

    socket.emit("regen")
    regenButtonElement.innerText = "’é’°’µ’•’¨’•÷Ñ)"
    setInterval(function(){regenButtonElement.innerText = "’Ü’∏÷Ä ’≠’°’≤"},1000);
}